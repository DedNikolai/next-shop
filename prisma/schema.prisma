generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url       = env("DATABASE_URL") // uses connection pooling
}

model User {
    id Int @id @default(autoincrement())

    fullName String
    email    String    @unique
    password String
    role     UserRole  @default(USER)
    verified DateTime?
    cart Cart?
    // provider   String?
    // providerId String?

    // cart             Cart?
    // orders           Order[]
    // verificationCode VerificationCode?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum UserRole {
    USER
    ADMIN
}

model Category {
    id Int @id @default(autoincrement())
    name String @unique
    products Product[]
    url String @unique
    createAt DateTime @default(now())
    updateAt DateTime @updatedAt
}

model Product {
    id Int @id @default(autoincrement())
    name String
    imageUrl String
    description String
    price Int
    category Category @relation(fields: [categoryId], references: [id])
    categoryId Int
    addCount Int @default(0)
    productUrl String @default("")
    
    // items ProductItem[]
    
    // ingredients Ingredient[]
    
    createAt DateTime @default(now())
    updateAt DateTime @updatedAt

    CartItem CartItem[]
}

model Cart {
  id          Int        @id @default(autoincrement())
  user        User?      @relation(fields: [userId], references: [id])
  userId      Int?        @unique
  sessionId   String?    // для неавторизованих користувачів
  items       CartItem[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
